name: Docker Build and Push

on:
  push:
    branches:
      - main  # 监听 main 分支的 push 事件

jobs:
  build:
    runs-on: ubuntu-latest  # 在 Ubuntu 最新版本的虚拟环境中运行

    steps:
      # Step 1: 检出代码
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: 设置 Docker 环境
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: 登录 Docker Hub 或 GitHub Container Registry（GHCR）
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # GitHub Secrets 中存储 Docker 用户名
          password: ${{ secrets.DOCKER_PASSWORD }}  # GitHub Secrets 中存储 Docker 密码（或 Token）
      # Step 4: 构建并推送 Docker 镜像
      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: .  # 构建上下文，即整个仓库
          push: true  # 将构建的镜像推送到容器注册表
          tags: |
            hupengwei123/cicd:eureka-server
            hupengwei123/cicd:gateway
            hupengwei123/cicd:reservation-service
            hupengwei123/cicd:library-service
            hupengwei123/cicd:rating-service

      # Step 5: 清理缓存（可选）
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache  # 缓存 Docker 镜像层
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-
