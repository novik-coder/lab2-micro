name: Docker Build and Push

on:
  push:
    branches:
      - main  # 监听 main 分支的 push 事件

jobs:
  build:
    runs-on: ubuntu-latest  # 在 Ubuntu 最新版本的虚拟环境中运行

    steps:
      # Step 1: 检出代码
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: 设置 Java 17 环境
      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adoptopenjdk'

      # Step 3: 设置 Maven 环境
      - name: Set up Maven
        uses: actions/setup-maven@v2

      # Step 4: 构建并打包所有服务
      - name: Build all services
        run: |
          mvn clean package -DskipTests  # 在根目录下构建所有服务

      # Step 5: 设置 Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 6: 登录 Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # GitHub Secrets 中存储 Docker 用户名
          password: ${{ secrets.DOCKER_PASSWORD }}  # GitHub Secrets 中存储 Docker 密码（或 Token）

      # Step 7: 构建并推送 Docker 镜像
      - name: Build and push Docker image for eureka-server
        uses: docker/build-push-action@v3
        with:
          context: ./discovery-service  # 构建 eureka-server 服务的 Dockerfile
          push: true  # 将构建的镜像推送到容器注册表
          tags: hupengwei123/cicd:eureka-server  # 推送到 Docker Hub

      - name: Build and push Docker image for gateway
        uses: docker/build-push-action@v3
        with:
          context: ./gateway-service  # 构建 gateway 服务的 Dockerfile
          push: true
          tags: hupengwei123/cicd:gateway  # 推送到 Docker Hub

      - name: Build and push Docker image for reservation-service
        uses: docker/build-push-action@v3
        with:
          context: ./reservation-service  # 构建 reservation-service 服务的 Dockerfile
          push: true
          tags: hupengwei123/cicd:reservation-service  # 推送到 Docker Hub

      - name: Build and push Docker image for library-service
        uses: docker/build-push-action@v3
        with:
          context: ./library-service  # 构建 library-service 服务的 Dockerfile
          push: true
          tags: hupengwei123/cicd:library-service  # 推送到 Docker Hub

      - name: Build and push Docker image for rating-service
        uses: docker/build-push-action@v3
        with:
          context: ./rating-service  # 构建 rating-service 服务的 Dockerfile
          push: true
          tags: hupengwei123/cicd:rating-service  # 推送到 Docker Hub

      # Step 8: 缓存 Docker 镜像层（可选，提高构建效率）
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache  # 缓存 Docker 镜像层
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-
